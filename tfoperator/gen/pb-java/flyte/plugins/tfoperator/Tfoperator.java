// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tfoperator.proto

package flyte.plugins.tfoperator;

public final class Tfoperator {
  private Tfoperator() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface TFOperatorPluginTaskOrBuilder extends
      // @@protoc_insertion_point(interface_extends:flyte.plugins.tfoperator.TFOperatorPluginTask)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * <pre>
   * Optional Proto for TFOperatorPlugin
   * </pre>
   *
   * Protobuf type {@code flyte.plugins.tfoperator.TFOperatorPluginTask}
   */
  public  static final class TFOperatorPluginTask extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:flyte.plugins.tfoperator.TFOperatorPluginTask)
      TFOperatorPluginTaskOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TFOperatorPluginTask.newBuilder() to construct.
    private TFOperatorPluginTask(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TFOperatorPluginTask() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TFOperatorPluginTask(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return flyte.plugins.tfoperator.Tfoperator.internal_static_flyte_plugins_tfoperator_TFOperatorPluginTask_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return flyte.plugins.tfoperator.Tfoperator.internal_static_flyte_plugins_tfoperator_TFOperatorPluginTask_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              flyte.plugins.tfoperator.Tfoperator.TFOperatorPluginTask.class, flyte.plugins.tfoperator.Tfoperator.TFOperatorPluginTask.Builder.class);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof flyte.plugins.tfoperator.Tfoperator.TFOperatorPluginTask)) {
        return super.equals(obj);
      }
      flyte.plugins.tfoperator.Tfoperator.TFOperatorPluginTask other = (flyte.plugins.tfoperator.Tfoperator.TFOperatorPluginTask) obj;

      boolean result = true;
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static flyte.plugins.tfoperator.Tfoperator.TFOperatorPluginTask parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static flyte.plugins.tfoperator.Tfoperator.TFOperatorPluginTask parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static flyte.plugins.tfoperator.Tfoperator.TFOperatorPluginTask parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static flyte.plugins.tfoperator.Tfoperator.TFOperatorPluginTask parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static flyte.plugins.tfoperator.Tfoperator.TFOperatorPluginTask parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static flyte.plugins.tfoperator.Tfoperator.TFOperatorPluginTask parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static flyte.plugins.tfoperator.Tfoperator.TFOperatorPluginTask parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static flyte.plugins.tfoperator.Tfoperator.TFOperatorPluginTask parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static flyte.plugins.tfoperator.Tfoperator.TFOperatorPluginTask parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static flyte.plugins.tfoperator.Tfoperator.TFOperatorPluginTask parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static flyte.plugins.tfoperator.Tfoperator.TFOperatorPluginTask parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static flyte.plugins.tfoperator.Tfoperator.TFOperatorPluginTask parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(flyte.plugins.tfoperator.Tfoperator.TFOperatorPluginTask prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Optional Proto for TFOperatorPlugin
     * </pre>
     *
     * Protobuf type {@code flyte.plugins.tfoperator.TFOperatorPluginTask}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:flyte.plugins.tfoperator.TFOperatorPluginTask)
        flyte.plugins.tfoperator.Tfoperator.TFOperatorPluginTaskOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return flyte.plugins.tfoperator.Tfoperator.internal_static_flyte_plugins_tfoperator_TFOperatorPluginTask_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return flyte.plugins.tfoperator.Tfoperator.internal_static_flyte_plugins_tfoperator_TFOperatorPluginTask_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                flyte.plugins.tfoperator.Tfoperator.TFOperatorPluginTask.class, flyte.plugins.tfoperator.Tfoperator.TFOperatorPluginTask.Builder.class);
      }

      // Construct using flyte.plugins.tfoperator.Tfoperator.TFOperatorPluginTask.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return flyte.plugins.tfoperator.Tfoperator.internal_static_flyte_plugins_tfoperator_TFOperatorPluginTask_descriptor;
      }

      public flyte.plugins.tfoperator.Tfoperator.TFOperatorPluginTask getDefaultInstanceForType() {
        return flyte.plugins.tfoperator.Tfoperator.TFOperatorPluginTask.getDefaultInstance();
      }

      public flyte.plugins.tfoperator.Tfoperator.TFOperatorPluginTask build() {
        flyte.plugins.tfoperator.Tfoperator.TFOperatorPluginTask result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public flyte.plugins.tfoperator.Tfoperator.TFOperatorPluginTask buildPartial() {
        flyte.plugins.tfoperator.Tfoperator.TFOperatorPluginTask result = new flyte.plugins.tfoperator.Tfoperator.TFOperatorPluginTask(this);
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof flyte.plugins.tfoperator.Tfoperator.TFOperatorPluginTask) {
          return mergeFrom((flyte.plugins.tfoperator.Tfoperator.TFOperatorPluginTask)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(flyte.plugins.tfoperator.Tfoperator.TFOperatorPluginTask other) {
        if (other == flyte.plugins.tfoperator.Tfoperator.TFOperatorPluginTask.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        flyte.plugins.tfoperator.Tfoperator.TFOperatorPluginTask parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (flyte.plugins.tfoperator.Tfoperator.TFOperatorPluginTask) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:flyte.plugins.tfoperator.TFOperatorPluginTask)
    }

    // @@protoc_insertion_point(class_scope:flyte.plugins.tfoperator.TFOperatorPluginTask)
    private static final flyte.plugins.tfoperator.Tfoperator.TFOperatorPluginTask DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new flyte.plugins.tfoperator.Tfoperator.TFOperatorPluginTask();
    }

    public static flyte.plugins.tfoperator.Tfoperator.TFOperatorPluginTask getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TFOperatorPluginTask>
        PARSER = new com.google.protobuf.AbstractParser<TFOperatorPluginTask>() {
      public TFOperatorPluginTask parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TFOperatorPluginTask(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TFOperatorPluginTask> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TFOperatorPluginTask> getParserForType() {
      return PARSER;
    }

    public flyte.plugins.tfoperator.Tfoperator.TFOperatorPluginTask getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TFJobOrBuilder extends
      // @@protoc_insertion_point(interface_extends:flyte.plugins.tfoperator.TFJob)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string image = 1;</code>
     */
    java.lang.String getImage();
    /**
     * <code>string image = 1;</code>
     */
    com.google.protobuf.ByteString
        getImageBytes();

    /**
     * <code>int32 num_ps = 2;</code>
     */
    int getNumPs();

    /**
     * <code>int32 replicas = 3;</code>
     */
    int getReplicas();

    /**
     * <code>string command = 4;</code>
     */
    java.lang.String getCommand();
    /**
     * <code>string command = 4;</code>
     */
    com.google.protobuf.ByteString
        getCommandBytes();

    /**
     * <code>map&lt;string, string&gt; args = 5;</code>
     */
    int getArgsCount();
    /**
     * <code>map&lt;string, string&gt; args = 5;</code>
     */
    boolean containsArgs(
        java.lang.String key);
    /**
     * Use {@link #getArgsMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.String>
    getArgs();
    /**
     * <code>map&lt;string, string&gt; args = 5;</code>
     */
    java.util.Map<java.lang.String, java.lang.String>
    getArgsMap();
    /**
     * <code>map&lt;string, string&gt; args = 5;</code>
     */

    java.lang.String getArgsOrDefault(
        java.lang.String key,
        java.lang.String defaultValue);
    /**
     * <code>map&lt;string, string&gt; args = 5;</code>
     */

    java.lang.String getArgsOrThrow(
        java.lang.String key);

    /**
     * <pre>
     * int32 cpu = 6;
     * int32 memory = 7;
     * int32 gpu = 8;
     * </pre>
     *
     * <code>string volumeClaimName = 6;</code>
     */
    java.lang.String getVolumeClaimName();
    /**
     * <pre>
     * int32 cpu = 6;
     * int32 memory = 7;
     * int32 gpu = 8;
     * </pre>
     *
     * <code>string volumeClaimName = 6;</code>
     */
    com.google.protobuf.ByteString
        getVolumeClaimNameBytes();
  }
  /**
   * <pre>
   * TODO(swiftdiaries):: add resource (CPUs, Memory) requirements and accelerator (GPU) requirements 
   * </pre>
   *
   * Protobuf type {@code flyte.plugins.tfoperator.TFJob}
   */
  public  static final class TFJob extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:flyte.plugins.tfoperator.TFJob)
      TFJobOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TFJob.newBuilder() to construct.
    private TFJob(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TFJob() {
      image_ = "";
      numPs_ = 0;
      replicas_ = 0;
      command_ = "";
      volumeClaimName_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TFJob(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              image_ = s;
              break;
            }
            case 16: {

              numPs_ = input.readInt32();
              break;
            }
            case 24: {

              replicas_ = input.readInt32();
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              command_ = s;
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                args_ = com.google.protobuf.MapField.newMapField(
                    ArgsDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000010;
              }
              com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
              args__ = input.readMessage(
                  ArgsDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              args_.getMutableMap().put(
                  args__.getKey(), args__.getValue());
              break;
            }
            case 50: {
              java.lang.String s = input.readStringRequireUtf8();

              volumeClaimName_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return flyte.plugins.tfoperator.Tfoperator.internal_static_flyte_plugins_tfoperator_TFJob_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 5:
          return internalGetArgs();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return flyte.plugins.tfoperator.Tfoperator.internal_static_flyte_plugins_tfoperator_TFJob_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              flyte.plugins.tfoperator.Tfoperator.TFJob.class, flyte.plugins.tfoperator.Tfoperator.TFJob.Builder.class);
    }

    private int bitField0_;
    public static final int IMAGE_FIELD_NUMBER = 1;
    private volatile java.lang.Object image_;
    /**
     * <code>string image = 1;</code>
     */
    public java.lang.String getImage() {
      java.lang.Object ref = image_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        image_ = s;
        return s;
      }
    }
    /**
     * <code>string image = 1;</code>
     */
    public com.google.protobuf.ByteString
        getImageBytes() {
      java.lang.Object ref = image_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        image_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NUM_PS_FIELD_NUMBER = 2;
    private int numPs_;
    /**
     * <code>int32 num_ps = 2;</code>
     */
    public int getNumPs() {
      return numPs_;
    }

    public static final int REPLICAS_FIELD_NUMBER = 3;
    private int replicas_;
    /**
     * <code>int32 replicas = 3;</code>
     */
    public int getReplicas() {
      return replicas_;
    }

    public static final int COMMAND_FIELD_NUMBER = 4;
    private volatile java.lang.Object command_;
    /**
     * <code>string command = 4;</code>
     */
    public java.lang.String getCommand() {
      java.lang.Object ref = command_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        command_ = s;
        return s;
      }
    }
    /**
     * <code>string command = 4;</code>
     */
    public com.google.protobuf.ByteString
        getCommandBytes() {
      java.lang.Object ref = command_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        command_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ARGS_FIELD_NUMBER = 5;
    private static final class ArgsDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.String> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.String>newDefaultInstance(
                  flyte.plugins.tfoperator.Tfoperator.internal_static_flyte_plugins_tfoperator_TFJob_ArgsEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "");
    }
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.String> args_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
    internalGetArgs() {
      if (args_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            ArgsDefaultEntryHolder.defaultEntry);
      }
      return args_;
    }

    public int getArgsCount() {
      return internalGetArgs().getMap().size();
    }
    /**
     * <code>map&lt;string, string&gt; args = 5;</code>
     */

    public boolean containsArgs(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetArgs().getMap().containsKey(key);
    }
    /**
     * Use {@link #getArgsMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getArgs() {
      return getArgsMap();
    }
    /**
     * <code>map&lt;string, string&gt; args = 5;</code>
     */

    public java.util.Map<java.lang.String, java.lang.String> getArgsMap() {
      return internalGetArgs().getMap();
    }
    /**
     * <code>map&lt;string, string&gt; args = 5;</code>
     */

    public java.lang.String getArgsOrDefault(
        java.lang.String key,
        java.lang.String defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetArgs().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, string&gt; args = 5;</code>
     */

    public java.lang.String getArgsOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetArgs().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int VOLUMECLAIMNAME_FIELD_NUMBER = 6;
    private volatile java.lang.Object volumeClaimName_;
    /**
     * <pre>
     * int32 cpu = 6;
     * int32 memory = 7;
     * int32 gpu = 8;
     * </pre>
     *
     * <code>string volumeClaimName = 6;</code>
     */
    public java.lang.String getVolumeClaimName() {
      java.lang.Object ref = volumeClaimName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        volumeClaimName_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * int32 cpu = 6;
     * int32 memory = 7;
     * int32 gpu = 8;
     * </pre>
     *
     * <code>string volumeClaimName = 6;</code>
     */
    public com.google.protobuf.ByteString
        getVolumeClaimNameBytes() {
      java.lang.Object ref = volumeClaimName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        volumeClaimName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getImageBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, image_);
      }
      if (numPs_ != 0) {
        output.writeInt32(2, numPs_);
      }
      if (replicas_ != 0) {
        output.writeInt32(3, replicas_);
      }
      if (!getCommandBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, command_);
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetArgs(),
          ArgsDefaultEntryHolder.defaultEntry,
          5);
      if (!getVolumeClaimNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, volumeClaimName_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getImageBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, image_);
      }
      if (numPs_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, numPs_);
      }
      if (replicas_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, replicas_);
      }
      if (!getCommandBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, command_);
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
           : internalGetArgs().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
        args__ = ArgsDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(5, args__);
      }
      if (!getVolumeClaimNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, volumeClaimName_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof flyte.plugins.tfoperator.Tfoperator.TFJob)) {
        return super.equals(obj);
      }
      flyte.plugins.tfoperator.Tfoperator.TFJob other = (flyte.plugins.tfoperator.Tfoperator.TFJob) obj;

      boolean result = true;
      result = result && getImage()
          .equals(other.getImage());
      result = result && (getNumPs()
          == other.getNumPs());
      result = result && (getReplicas()
          == other.getReplicas());
      result = result && getCommand()
          .equals(other.getCommand());
      result = result && internalGetArgs().equals(
          other.internalGetArgs());
      result = result && getVolumeClaimName()
          .equals(other.getVolumeClaimName());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + IMAGE_FIELD_NUMBER;
      hash = (53 * hash) + getImage().hashCode();
      hash = (37 * hash) + NUM_PS_FIELD_NUMBER;
      hash = (53 * hash) + getNumPs();
      hash = (37 * hash) + REPLICAS_FIELD_NUMBER;
      hash = (53 * hash) + getReplicas();
      hash = (37 * hash) + COMMAND_FIELD_NUMBER;
      hash = (53 * hash) + getCommand().hashCode();
      if (!internalGetArgs().getMap().isEmpty()) {
        hash = (37 * hash) + ARGS_FIELD_NUMBER;
        hash = (53 * hash) + internalGetArgs().hashCode();
      }
      hash = (37 * hash) + VOLUMECLAIMNAME_FIELD_NUMBER;
      hash = (53 * hash) + getVolumeClaimName().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static flyte.plugins.tfoperator.Tfoperator.TFJob parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static flyte.plugins.tfoperator.Tfoperator.TFJob parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static flyte.plugins.tfoperator.Tfoperator.TFJob parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static flyte.plugins.tfoperator.Tfoperator.TFJob parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static flyte.plugins.tfoperator.Tfoperator.TFJob parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static flyte.plugins.tfoperator.Tfoperator.TFJob parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static flyte.plugins.tfoperator.Tfoperator.TFJob parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static flyte.plugins.tfoperator.Tfoperator.TFJob parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static flyte.plugins.tfoperator.Tfoperator.TFJob parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static flyte.plugins.tfoperator.Tfoperator.TFJob parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static flyte.plugins.tfoperator.Tfoperator.TFJob parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static flyte.plugins.tfoperator.Tfoperator.TFJob parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(flyte.plugins.tfoperator.Tfoperator.TFJob prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * TODO(swiftdiaries):: add resource (CPUs, Memory) requirements and accelerator (GPU) requirements 
     * </pre>
     *
     * Protobuf type {@code flyte.plugins.tfoperator.TFJob}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:flyte.plugins.tfoperator.TFJob)
        flyte.plugins.tfoperator.Tfoperator.TFJobOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return flyte.plugins.tfoperator.Tfoperator.internal_static_flyte_plugins_tfoperator_TFJob_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 5:
            return internalGetArgs();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 5:
            return internalGetMutableArgs();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return flyte.plugins.tfoperator.Tfoperator.internal_static_flyte_plugins_tfoperator_TFJob_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                flyte.plugins.tfoperator.Tfoperator.TFJob.class, flyte.plugins.tfoperator.Tfoperator.TFJob.Builder.class);
      }

      // Construct using flyte.plugins.tfoperator.Tfoperator.TFJob.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        image_ = "";

        numPs_ = 0;

        replicas_ = 0;

        command_ = "";

        internalGetMutableArgs().clear();
        volumeClaimName_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return flyte.plugins.tfoperator.Tfoperator.internal_static_flyte_plugins_tfoperator_TFJob_descriptor;
      }

      public flyte.plugins.tfoperator.Tfoperator.TFJob getDefaultInstanceForType() {
        return flyte.plugins.tfoperator.Tfoperator.TFJob.getDefaultInstance();
      }

      public flyte.plugins.tfoperator.Tfoperator.TFJob build() {
        flyte.plugins.tfoperator.Tfoperator.TFJob result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public flyte.plugins.tfoperator.Tfoperator.TFJob buildPartial() {
        flyte.plugins.tfoperator.Tfoperator.TFJob result = new flyte.plugins.tfoperator.Tfoperator.TFJob(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.image_ = image_;
        result.numPs_ = numPs_;
        result.replicas_ = replicas_;
        result.command_ = command_;
        result.args_ = internalGetArgs();
        result.args_.makeImmutable();
        result.volumeClaimName_ = volumeClaimName_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof flyte.plugins.tfoperator.Tfoperator.TFJob) {
          return mergeFrom((flyte.plugins.tfoperator.Tfoperator.TFJob)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(flyte.plugins.tfoperator.Tfoperator.TFJob other) {
        if (other == flyte.plugins.tfoperator.Tfoperator.TFJob.getDefaultInstance()) return this;
        if (!other.getImage().isEmpty()) {
          image_ = other.image_;
          onChanged();
        }
        if (other.getNumPs() != 0) {
          setNumPs(other.getNumPs());
        }
        if (other.getReplicas() != 0) {
          setReplicas(other.getReplicas());
        }
        if (!other.getCommand().isEmpty()) {
          command_ = other.command_;
          onChanged();
        }
        internalGetMutableArgs().mergeFrom(
            other.internalGetArgs());
        if (!other.getVolumeClaimName().isEmpty()) {
          volumeClaimName_ = other.volumeClaimName_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        flyte.plugins.tfoperator.Tfoperator.TFJob parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (flyte.plugins.tfoperator.Tfoperator.TFJob) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object image_ = "";
      /**
       * <code>string image = 1;</code>
       */
      public java.lang.String getImage() {
        java.lang.Object ref = image_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          image_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string image = 1;</code>
       */
      public com.google.protobuf.ByteString
          getImageBytes() {
        java.lang.Object ref = image_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          image_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string image = 1;</code>
       */
      public Builder setImage(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        image_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string image = 1;</code>
       */
      public Builder clearImage() {
        
        image_ = getDefaultInstance().getImage();
        onChanged();
        return this;
      }
      /**
       * <code>string image = 1;</code>
       */
      public Builder setImageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        image_ = value;
        onChanged();
        return this;
      }

      private int numPs_ ;
      /**
       * <code>int32 num_ps = 2;</code>
       */
      public int getNumPs() {
        return numPs_;
      }
      /**
       * <code>int32 num_ps = 2;</code>
       */
      public Builder setNumPs(int value) {
        
        numPs_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 num_ps = 2;</code>
       */
      public Builder clearNumPs() {
        
        numPs_ = 0;
        onChanged();
        return this;
      }

      private int replicas_ ;
      /**
       * <code>int32 replicas = 3;</code>
       */
      public int getReplicas() {
        return replicas_;
      }
      /**
       * <code>int32 replicas = 3;</code>
       */
      public Builder setReplicas(int value) {
        
        replicas_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 replicas = 3;</code>
       */
      public Builder clearReplicas() {
        
        replicas_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object command_ = "";
      /**
       * <code>string command = 4;</code>
       */
      public java.lang.String getCommand() {
        java.lang.Object ref = command_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          command_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string command = 4;</code>
       */
      public com.google.protobuf.ByteString
          getCommandBytes() {
        java.lang.Object ref = command_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          command_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string command = 4;</code>
       */
      public Builder setCommand(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        command_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string command = 4;</code>
       */
      public Builder clearCommand() {
        
        command_ = getDefaultInstance().getCommand();
        onChanged();
        return this;
      }
      /**
       * <code>string command = 4;</code>
       */
      public Builder setCommandBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        command_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.String> args_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetArgs() {
        if (args_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              ArgsDefaultEntryHolder.defaultEntry);
        }
        return args_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetMutableArgs() {
        onChanged();;
        if (args_ == null) {
          args_ = com.google.protobuf.MapField.newMapField(
              ArgsDefaultEntryHolder.defaultEntry);
        }
        if (!args_.isMutable()) {
          args_ = args_.copy();
        }
        return args_;
      }

      public int getArgsCount() {
        return internalGetArgs().getMap().size();
      }
      /**
       * <code>map&lt;string, string&gt; args = 5;</code>
       */

      public boolean containsArgs(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetArgs().getMap().containsKey(key);
      }
      /**
       * Use {@link #getArgsMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String> getArgs() {
        return getArgsMap();
      }
      /**
       * <code>map&lt;string, string&gt; args = 5;</code>
       */

      public java.util.Map<java.lang.String, java.lang.String> getArgsMap() {
        return internalGetArgs().getMap();
      }
      /**
       * <code>map&lt;string, string&gt; args = 5;</code>
       */

      public java.lang.String getArgsOrDefault(
          java.lang.String key,
          java.lang.String defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetArgs().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;string, string&gt; args = 5;</code>
       */

      public java.lang.String getArgsOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetArgs().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearArgs() {
        internalGetMutableArgs().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;string, string&gt; args = 5;</code>
       */

      public Builder removeArgs(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableArgs().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String>
      getMutableArgs() {
        return internalGetMutableArgs().getMutableMap();
      }
      /**
       * <code>map&lt;string, string&gt; args = 5;</code>
       */
      public Builder putArgs(
          java.lang.String key,
          java.lang.String value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        if (value == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableArgs().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;string, string&gt; args = 5;</code>
       */

      public Builder putAllArgs(
          java.util.Map<java.lang.String, java.lang.String> values) {
        internalGetMutableArgs().getMutableMap()
            .putAll(values);
        return this;
      }

      private java.lang.Object volumeClaimName_ = "";
      /**
       * <pre>
       * int32 cpu = 6;
       * int32 memory = 7;
       * int32 gpu = 8;
       * </pre>
       *
       * <code>string volumeClaimName = 6;</code>
       */
      public java.lang.String getVolumeClaimName() {
        java.lang.Object ref = volumeClaimName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          volumeClaimName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * int32 cpu = 6;
       * int32 memory = 7;
       * int32 gpu = 8;
       * </pre>
       *
       * <code>string volumeClaimName = 6;</code>
       */
      public com.google.protobuf.ByteString
          getVolumeClaimNameBytes() {
        java.lang.Object ref = volumeClaimName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          volumeClaimName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * int32 cpu = 6;
       * int32 memory = 7;
       * int32 gpu = 8;
       * </pre>
       *
       * <code>string volumeClaimName = 6;</code>
       */
      public Builder setVolumeClaimName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        volumeClaimName_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * int32 cpu = 6;
       * int32 memory = 7;
       * int32 gpu = 8;
       * </pre>
       *
       * <code>string volumeClaimName = 6;</code>
       */
      public Builder clearVolumeClaimName() {
        
        volumeClaimName_ = getDefaultInstance().getVolumeClaimName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * int32 cpu = 6;
       * int32 memory = 7;
       * int32 gpu = 8;
       * </pre>
       *
       * <code>string volumeClaimName = 6;</code>
       */
      public Builder setVolumeClaimNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        volumeClaimName_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:flyte.plugins.tfoperator.TFJob)
    }

    // @@protoc_insertion_point(class_scope:flyte.plugins.tfoperator.TFJob)
    private static final flyte.plugins.tfoperator.Tfoperator.TFJob DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new flyte.plugins.tfoperator.Tfoperator.TFJob();
    }

    public static flyte.plugins.tfoperator.Tfoperator.TFJob getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TFJob>
        PARSER = new com.google.protobuf.AbstractParser<TFJob>() {
      public TFJob parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TFJob(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TFJob> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TFJob> getParserForType() {
      return PARSER;
    }

    public flyte.plugins.tfoperator.Tfoperator.TFJob getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_flyte_plugins_tfoperator_TFOperatorPluginTask_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_flyte_plugins_tfoperator_TFOperatorPluginTask_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_flyte_plugins_tfoperator_TFJob_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_flyte_plugins_tfoperator_TFJob_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_flyte_plugins_tfoperator_TFJob_ArgsEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_flyte_plugins_tfoperator_TFJob_ArgsEntry_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\020tfoperator.proto\022\030flyte.plugins.tfoper" +
      "ator\"\026\n\024TFOperatorPluginTask\"\310\001\n\005TFJob\022\r" +
      "\n\005image\030\001 \001(\t\022\016\n\006num_ps\030\002 \001(\005\022\020\n\010replica" +
      "s\030\003 \001(\005\022\017\n\007command\030\004 \001(\t\0227\n\004args\030\005 \003(\0132)" +
      ".flyte.plugins.tfoperator.TFJob.ArgsEntr" +
      "y\022\027\n\017volumeClaimName\030\006 \001(\t\032+\n\tArgsEntry\022" +
      "\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001B7Z5githu" +
      "b.com/flyteorg/kfplugins/tfoperator/comm" +
      "on/protob\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_flyte_plugins_tfoperator_TFOperatorPluginTask_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_flyte_plugins_tfoperator_TFOperatorPluginTask_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_flyte_plugins_tfoperator_TFOperatorPluginTask_descriptor,
        new java.lang.String[] { });
    internal_static_flyte_plugins_tfoperator_TFJob_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_flyte_plugins_tfoperator_TFJob_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_flyte_plugins_tfoperator_TFJob_descriptor,
        new java.lang.String[] { "Image", "NumPs", "Replicas", "Command", "Args", "VolumeClaimName", });
    internal_static_flyte_plugins_tfoperator_TFJob_ArgsEntry_descriptor =
      internal_static_flyte_plugins_tfoperator_TFJob_descriptor.getNestedTypes().get(0);
    internal_static_flyte_plugins_tfoperator_TFJob_ArgsEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_flyte_plugins_tfoperator_TFJob_ArgsEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
